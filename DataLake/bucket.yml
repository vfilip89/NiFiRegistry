flows:
  189bd39b-1aa7-4d11-a0c0-be81efae3f25: {ver: 2, file: FullProductionDataPipeline.snapshot,
    comments: Changes at GetFile and at counting less than 1000 loads to staging.,
    author: anonymous, created: 1738862348493, flowName: FullProductionDataPipeline,
    flowDesc: Crickard Chapter 11 Building a Production Data Pipeline. Full Pipeline.}
  74085b2b-9e02-4ed5-9d30-2b84dc797715: {ver: 1, file: InsertWarehouse.snapshot, comments: 'Initial
      version of InsertWarehouse processor group. ', author: anonymous, created: 1738857604733,
    flowName: InsertWarehouse, flowDesc: 'Uses an ExecuteSQLRecord and a PutSQL processor.
      ExecuteSQLProcessor performs a select operation on the staging table to retrieve
      data. Then the pipeline sends the output to the SplitText processor, which connects
      to the EvalueJsonPath processor, which is a direct copy of the one from the
      ReadDataLake processor group that connects to the final PutSQL processor that
      loads data to the warehouse.'}
  e2f3d881-db30-42f9-aa02-08a2b3f539a0:
    ver: 1
    file: ValidateStaging.snapshot
    comments: ' Initial version of ValidateStaging processor group. '
    author: anonymous
    created: 1738853598221
    flowName: ValidateStaging
    flowDesc: |-
      Validates data in staging using a Great Expectations validation suite named staging.validation. EvaluateJsonPath and RouteOnAttribute processors check the result attribute to see whether it matches pass. If so,
      the processor sends the flowfile to an output port.
  dace71be-ef31-4659-9944-6df7f0aa0ec6: {ver: 3, file: ReadDataLake.snapshot, comments: 'GetFile
      changes: do not keep source files, scheduling 1 sec and batchsize 10 files.
      In order to not execute more than 10 unnecessary validations and uploads to
      warehouse.', author: anonymous, created: 1738862243171, flowName: ReadDataLake,
    flowDesc: Reads files from the data lake and extracts JSON fields. Also counts
      the number of files extracted.}
  d57f0422-c17c-4f6e-b7b0-af603bdef896: {ver: 2, file: ScanContent.snapshot, comments: Changed
      the name of input port., author: anonymous, created: 1738769171845, flowName: ScanContent,
    flowDesc: 'Looks at fields in the flowfile content and compare them to a dictionary
      file â€“ a file with content on each line that you are looking for. Also counts
      the occurrences. '}
  eca536d9-57e5-434d-bf29-1f9e03f8a996: {ver: 3, file: QueryStaging.snapshot, comments: 'Count
      number of unmatched occurrences for uploaded less than 1000. ', author: anonymous,
    created: 1738862295573, flowName: QueryStaging, flowDesc: Uses an ExecuteSQLRecord
      processor to perform a select count query to a staging database. Counts the
      data upserted and creates an attribute recordcount.}
  1802d7bf-2eb0-48f6-afb7-1585f7889270: {ver: 4, file: InsertStaging.snapshot, comments: Using
      variables and not parameters properly., author: anonymous, created: 1738844539331,
    flowName: InsertStaging, flowDesc: Uses a PutSQL processor to upsert data at a
      staging database. Also counts the data upserted.}
layoutVer: 1
bucketId: d53c79cb-311e-46f6-b1e5-5dec8342e770
